/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Ruben' at '22/10/15 17:32' with Gradle 2.6
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.6/userguide/tutorial_java_projects.html
 */
apply plugin: 'java'

repositories {
    jcenter()
}

dependencies {
    runtime 'org.slick2d:slick2d-core:1.0.1'
}

project(':JAGEplugin') {
	apply plugin: 'java'
	dependencies {
		compile project(':JAGEcore')
		compile project(':JAGEmodules')
	}
}

project(':JAGEmodules') {
	apply plugin: 'java'
	dependencies {
		compile project(':JAGEcore')
	}
}

project(':JAGEcore') {
	apply plugin: 'java'
	apply plugin: 'application'
	dependencies {
		compile project(':JAGEPluginSystem')
	}
	run.dependsOn ":JAGEcore:unpackNatives"
	
	task copyModules(type: Copy) {
	    from project(":JAGEmodules").jar
	    from project(":JAGEplugin").jar
	    into("build/modules")
	    //include('JAGEmodules.jar')
	}
	
	copyModules.dependsOn ":JAGEmodules:jar"
	copyModules.dependsOn ":JAGEplugin:jar"
	
	task copyTest(type: Copy) {
	    from project(":JAGEtetris").projectDir.path + "/resources"
	    into("build/")
	}
	
	run.dependsOn copyModules
	run.dependsOn copyTest
}

project(':JAGEeditor') {
	apply plugin: 'java'
	apply plugin: 'application'
	dependencies {
		compile project(':JAGEPluginSystem')
		compile project(':JAGEcore')
	}
	
	task copyModules(type: Copy) {
	    from project(":JAGEmodules").jar
	    from project(":JAGEplugin").jar
	    into("build/modules")
	}
	
	copyModules.dependsOn ":JAGEmodules:jar"
	copyModules.dependsOn ":JAGEplugin:jar"
	
	run.dependsOn copyModules
	
	/*
	task copyTest(type: Copy) {
	    from project(":JAGEtest").projectDir.path + "/resources"
	    into("build/")
	}
	
	run.dependsOn copyTest
	*/
}

task runeditor(dependsOn: ":JAGEeditor:run") {

}

task debugeditor(dependsOn:":JAGEeditor:run") {

}

task releaseeditor() {

}

task runplayer(dependsOn:":JAGEcore:run") {

}

task debugplayer(dependsOn:":JAGEcore:run") {

}

task releaseplayer() {

}



gradle.taskGraph.whenReady {taskGraph ->
    if (taskGraph.hasTask(debugplayer)) {
        project(':JAGEcore').applicationDefaultJvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8080"]
    }
    else {
    	project(':JAGEcore').applicationDefaultJvmArgs = ["-Djava.library.path=./natives"]
    }
    
    if (taskGraph.hasTask(debugeditor)) {
        project(':JAGEeditor').applicationDefaultJvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8080"]
    }
    else {
    	project(':JAGEeditor').applicationDefaultJvmArgs = ["-Djava.library.path=./natives"]
    }
}

task copyModules(type: Copy, dependsOn: ":JAGEmodules:jar") {
	from project(":JAGEmodules").jar
	into("build/bin/modules")
	include('JAGEmodules.jar')
}
	
task copyTest(type: Copy) {
	from project(":JAGEtest").projectDir.path + "/resources"
	into("build/bin")
}

task copyNatives(type: Copy, dependsOn: ":JAGEcore:unpackNatives") {
	from project(":JAGEcore").projectDir.path + "/build/natives/windows"
	from project(":JAGEcore").projectDir.path + "/build/natives/linux"
	from project(":JAGEcore").projectDir.path + "/build/natives/osx"
	into("build/bin/natives")
}

task copyCoreLibs(type: Copy, dependsOn: ":JAGEcore:installDist") {
	from project(":JAGEcore").projectDir.path + "/build/install/JAGEcore"
	into("build")
}

releaseplayer.dependsOn copyModules
releaseplayer.dependsOn copyTest
releaseplayer.dependsOn copyNatives
releaseplayer.dependsOn copyCoreLibs